const fs = require('fs');
const path = require('path')
const files = require('./fileUtilities.js');
const shared = __dirname + '/../..' + '/files/';
let fileContent = '';

module.exports = {
    generateRoutes: generateRoutes
}

// generateRoutes();

function generateRoutes() {
    const location = __dirname + '/..' + '/routes/';
    const fileName = 'contentRouter' + '.js';

    fileContent += addAutoGeneratedText();
    fileContent += addNewline();
    fileContent += addImports();
    fileContent += addNewline();
    fileContent += addNewline();
    fileContent += addModuleExportsStart();

    directoryWalk(shared);

    fileContent += addNewline();
    fileContent += addModuleExportsEnd();

    fs.writeFile(location + fileName, fileContent, function (error) {
        if (error) {
            return console.log(error)
        }
        console.log(fileName + " created");
    })
}

function directoryWalk(root, prefix = '') {
    let dir = path.join(root, prefix)
    if (fs.statSync(dir).isDirectory()) {
        let returnPath = prefix.substring(0, prefix.lastIndexOf('/') + 1);
        const route = dir.replace(path.normalize(shared), '');
        const splitted = dir.split('/')
        const title = splitted[splitted.length - 1];

        if (route !== '' && title !== '') {
            if (returnPath === '') {
                fileContent += addNewline();
                fileContent += addDirectorySeperator(route)
                returnPath = 'home/'
            }
            fileContent += addNewline();
            fileContent += addContentRoute(returnPath, route, title)
        }

        fs.readdirSync(dir)
            .forEach(function (name) {
                directoryWalk(root, path.join(prefix, name))
            })
    }
}

function addAutoGeneratedText() {
    return '/* This file was autogenerated by src/utilities/routeGenerator.js */';
}

function addImports() {
    return 'const routeHelper = require("../helpers/routeHelper.js");';
}

function addNewline() {
    return "\n";
}

function addModuleExportsStart() {
    return "module.exports = function () {";
}

function addModuleExportsEnd() {
    return "}";
}

function addDirectorySeperator(directory) {
    return "\t/* " + directory + " */";
}

function addContentRoute(returnPath, route, title) {
    returnPath = files.urlEncode(returnPath);
    route = '/' + files.urlEncode(route);
    title = files.capitalAll(title);
    return '\trouteHelper.contentRoute("' + returnPath + '", "' + route + '", "' + title + '");';
}